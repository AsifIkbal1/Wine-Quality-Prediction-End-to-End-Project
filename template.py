# ЁЯУБ ржкрзНрж░рзЯрзЛржЬржирзАрзЯ рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржЗржоржкрзЛрж░рзНржЯ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
import os
from pathlib import Path
import logging

# ЁЯУЭ рж▓ржЧрж┐ржВ ржХржиржлрж┐ржЧрж╛рж░ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ ржпрж╛рждрзЗ ржХрзЛржи ржлрж╛ржЗрж▓ ржХржЦржи рждрзИрж░рж┐ рж╣ржЪрзНржЫрзЗ рж╕рзЗржЯрж╛ ржжрзЗржЦрж╛ ржпрж╛рзЯ
logging.basicConfig(level=logging.INFO, format='[%(asctime)s]: %(message)s:')

# ЁЯОп ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржирж╛ржо ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
project_name = "mlProject"

# ЁЯУВ ржпрзЗрж╕ржм ржлрж╛ржЗрж▓ ржУ ржлрзЛрж▓рзНржбрж╛рж░ рждрзИрж░рж┐ ржХрж░рждрзЗ рж╣ржмрзЗ, рж╕рзЗржЧрзБрж▓рзЛрж░ рж▓рж┐рж╕рзНржЯ
list_of_files = [
    ".github/workflows/.gitkeep",                          # ЁЯЫая╕П GitHub Actions-ржПрж░ ржЬржирзНржп ржлрзЛрж▓рзНржбрж╛рж░ рждрзИрж░рж┐
    f"src/{project_name}/__init__.py",                     # ЁЯУж ржорзЗржЗржи ржкрзНржпрж╛ржХрзЗржЬ ржлрж╛ржЗрж▓
    f"src/{project_name}/components/__init__.py",          # ЁЯзй ржХржорзНржкрзЛржирзЗржирзНржЯ ржлрзЛрж▓рзНржбрж╛рж░
    f"src/{project_name}/utils/__init__.py",               # ЁЯЫая╕П ржЗржЙржЯрж┐рж▓рж┐ржЯрж┐ ржлрж╛ржЗрж▓
    f"src/{project_name}/utils/common.py",                 # ЁЯз░ рж╕рж╛ржзрж╛рж░ржг ржлрж╛ржВрж╢ржи ржПржЦрж╛ржирзЗ ржерж╛ржХржмрзЗ
    f"src/{project_name}/config/__init__.py",              # тЪЩя╕П ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржлрзЛрж▓рзНржбрж╛рж░
    f"src/{project_name}/config/configuration.py",         # тЪЩя╕П ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи рж╕рзЗржЯрж┐ржВрж╕
    f"src/{project_name}/pipeline/__init__.py",            # ЁЯзк ржкрж╛ржЗржкрж▓рж╛ржЗржи рж╕ржорзНржкрж░рзНржХрж┐ржд ржлрж╛ржЗрж▓
    f"src/{project_name}/entity/__init__.py",              # ЁЯзм ржПржиржЯрж┐ржЯрж┐ ржбрзЗржЯрж╛ ржХрзНрж▓рж╛рж╕
    f"src/{project_name}/entity/config_entity.py",         # ЁЯУД ржХржиржлрж┐ржЧ ржПржиржЯрж┐ржЯрж┐
    f"src/{project_name}/constants/__init__.py",           # ЁЯУМ ржХржирж╕рзНржЯрзНржпрж╛ржирзНржЯ ржорж╛ржи
    "config/config.yaml",                                  # тЪЩя╕П YAML ржХржиржлрж┐ржЧ ржлрж╛ржЗрж▓
    "params.yaml",                                         # ЁЯУЛ ржоржбрзЗрж▓ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржлрж╛ржЗрж▓
    "schema.yaml",                                         # ЁЯЧВя╕П рж╕рзНржХрж┐ржорж╛ рж╕ржВржХрзНрж░рж╛ржирзНржд ржлрж╛ржЗрж▓
    "main.py",                                             # ЁЯЪА ржкрзНрж░ржЬрзЗржХрзНржЯ рж░рж╛ржи ржХрж░рж╛рж░ ржорзЗржЗржи ржлрж╛ржЗрж▓
    "app.py",                                              # ЁЯМР ржУрзЯрзЗржм ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржи ржлрж╛ржЗрж▓
    "Dockerfile",                                          # ЁЯР│ ржбржХрж╛рж░ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи
    "requirements.txt",                                    # ЁЯУж ржкрзНрж░рзЯрзЛржЬржирзАрзЯ рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ржЧрзБрж▓рзЛ
    "setup.py",                                            # ЁЯУж ржкрзНржпрж╛ржХрзЗржЬ рж╕рзЗржЯржЖржк ржлрж╛ржЗрж▓
    "research/trials.ipynb",                               # ЁЯФм ржЧржмрзЗрж╖ржгрж╛ ржУ ржЯрзНрж░рж╛рзЯрж╛рж▓ ржирзЛржЯржмрзБржХ
    "templates/index.html",                                # ЁЯЦ╝я╕П ржлрзНрж░ржирзНржЯржПржирзНржб ржЯрзЗржоржкрзНрж▓рзЗржЯ
    "test.py"                                              # ЁЯзк ржЯрзЗрж╕рзНржЯрж┐ржВ ржлрж╛ржЗрж▓
]

# ЁЯФБ рж╕ржм ржлрж╛ржЗрж▓ ржУ ржлрзЛрж▓рзНржбрж╛рж░рзЗрж░ ржЬржирзНржп рж▓рзБржк ржЪрж╛рж▓рж╛ржирзЛ рж╣ржЪрзНржЫрзЗ
for filepath in list_of_files:
    filepath = Path(filepath)
    filedir, filename = os.path.split(filepath)

    # ЁЯУВ ржпржжрж┐ ржбрж┐рж░рзЗржХрзНржЯрж░рж┐ ржирж╛ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ рж╕рзЗржЯрж╛ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
    if filedir != "":
        os.makedirs(filedir, exist_ok=True)
        logging.info(f"Creating directory; {filedir} for the file: {filename}")

    # ЁЯУД ржпржжрж┐ ржлрж╛ржЗрж▓ ржирж╛ ржерж╛ржХрзЗ ржмрж╛ ржЦрж╛рж▓рж┐ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ рж╕рзЗржЯрж╛ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
    if (not os.path.exists(filepath)) or (os.path.getsize(filepath) == 0):
        with open(filepath, "w") as f:
            pass
            logging.info(f"Creating empty file: {filepath}")
    else:
        # ЁЯФБ ржлрж╛ржЗрж▓ ржЖржЧрзЗ ржерзЗржХрзЗржЗ ржЖржЫрзЗ, рждрж╛ржЗ ржХрж┐ржЫрзБ ржХрж░рж╛ рж▓рж╛ржЧржмрзЗ ржирж╛
        logging.info(f"{filename} is already exists")
