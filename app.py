from flask import Flask, render_template, request
import os 
import numpy as np
from mlProject.pipeline.prediction import PredictionPipeline

# ЁЯзк Flask ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржи рждрзИрж░рж┐ ржХрж░рж╛ рж╣рж▓рзЛ
app = Flask(__name__)

# ЁЯПа рж╣рзЛржо ржкрзЗржЗржЬ рж░рзЗржирзНржбрж╛рж░ ржХрж░ржмрзЗ (index.html ржжрзЗржЦрж╛ржмрзЗ)
@app.route('/', methods=['GET'])
def homePage():
    return render_template("index.html")

# ЁЯОп ржоржбрзЗрж▓ ржЯрзНрж░рзЗржЗржи ржХрж░рж╛рж░ ржЬржирзНржп route (main.py ржлрж╛ржЗрж▓ рж░рж╛ржи ржХрж░рж╛ржмрзЗ)
@app.route('/train', methods=['GET'])
def training():
    try:
        os.system("python main.py")  # тЪЩя╕П ржорзЗржЗржи ржкрж╛ржЗржкрж▓рж╛ржЗржи рж░рж╛ржи ржХрж░рзЗ
        return "тЬЕ Model training completed successfully!"
    except Exception as e:
        return f"тЭМ Error during training: {e}"

# ЁЯдЦ ржкрзНрж░рзЗржбрж┐ржХрж╢ржи ржХрж░рж╛рж░ рж░рж╛ржЙржЯ
@app.route('/predict', methods=['POST', 'GET'])
def predictRoute():
    if request.method == 'POST':
        try:
            # ЁЯУе ржЗржЙржЬрж╛рж░ ржЗржиржкрзБржЯржЧрзБрж▓рзЛ ржирзЗржУрзЯрж╛
            input_features = [
                float(request.form['fixed_acidity']),
                float(request.form['volatile_acidity']),
                float(request.form['citric_acid']),
                float(request.form['residual_sugar']),
                float(request.form['chlorides']),
                float(request.form['free_sulfur_dioxide']),
                float(request.form['total_sulfur_dioxide']),
                float(request.form['density']),
                float(request.form['pH']),
                float(request.form['sulphates']),
                float(request.form['alcohol']),
            ]

            # ЁЯзо ржЗржиржкрзБржЯ ржбрзЗржЯрж╛ numpy array рждрзЗ рж░рзВржкрж╛ржирзНрждрж░
            data = np.array(input_features).reshape(1, -1)

            # ЁЯФо PredictionPipeline ржжрж┐рзЯрзЗ ржкрзНрж░рзЗржбрж┐ржХрж╢ржи ржХрж░рж╛
            obj = PredictionPipeline()
            prediction = obj.predict(data)

            # ЁЯз╛ ржкрзНрж░рзЗржбрж┐ржХрж╢ржи рж░рзЗржЬрж╛рж▓рзНржЯ ржжрзЗржЦрж╛ржирзЛ
            return render_template('results.html', prediction=str(prediction))

        except Exception as e:
            print('тЭМ Exception occurred: ', e)
            return 'тЪая╕П ржХрж┐ржЫрзБ ржПржХржЯрж╛ ржнрзБрж▓ рж╣рзЯрзЗржЫрзЗред ржжрзЯрж╛ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред'

    else:
        return render_template('index.html')


# ЁЯЪА Flask ржЕрзНржпрж╛ржк ржЪрж╛рж▓рзБ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
if __name__ == "__main__":
	app.run(host="0.0.0.0", port=5001, debug=True)
